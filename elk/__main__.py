"""Main entry point for `elk`."""

from typing import Union
from .extraction import extract, ExtractionConfig
from elk.evaluation.evaluate import EvaluateConfig, evaluate_reporters
from elk.evaluation.sweep import SweepConfig, sweep
from .training import RunConfig
from .training.train import train
from pathlib import Path
from simple_parsing import ArgumentParser


def run():
    parser = ArgumentParser(add_help=False, add_config_path_arg=True)
    subparsers = parser.add_subparsers(dest="command", required=True)

    extract_parser = subparsers.add_parser(
        "extract", help="Extract hidden states from a model."
    )
    extract_parser.add_arguments(ExtractionConfig, dest="extraction")
    extract_parser.add_argument(
        "--output",
        "-o",
        type=Path,
        help="Path to save hidden states to.",
        required=True,
    )
    extract_parser.add_argument(
        "--max_gpus",
        type=int,
        help="Maximum number of GPUs to use.",
        required=False,
        default=-1,
    )

    elicit_parser = subparsers.add_parser(
        "elicit",
        help=(
            "Extract and train a set of ELK reporters "
            "on hidden states from `elk extract`. "
        ),
        conflict_handler="resolve",
    )
    elicit_parser.add_arguments(RunConfig, dest="run")
    elicit_parser.add_argument(
        "--output",
        "-o",
        type=Path,
        help="Path to save checkpoints to.",
    )

    subparsers.add_parser(
        "eval",
        help="Evaluate a set of ELK reporters generated by `elk train`.",
    ).add_arguments(EvaluateConfig, dest="eval")

    subparsers.add_parser(
        "sweep",
        help="Evaluate a set of reporters on a set of hidden states.",
    ).add_arguments(SweepConfig, dest="sweep")

    args = parser.parse_args()

    if args.command == "extract":
        extract(args.extraction, args.max_gpus).save_to_disk(args.output)
    elif args.command == "elicit":
        train(args.run, args.output)
    elif args.command == "eval":
        evaluate_reporters(args.eval)
    elif args.command == "sweep":
        sweep(args.sweep)
    else:
        raise ValueError(f"Unknown command {args.command}")


if __name__ == "__main__":
    run()
